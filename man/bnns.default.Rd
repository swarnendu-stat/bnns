% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bnns.R
\name{bnns.default}
\alias{bnns.default}
\title{Bayesian Neural Network Model Using Formula(default) Interface}
\usage{
\method{bnns}{default}(
  formula,
  data = list(),
  L = 1,
  nodes = 16,
  act_fn = 2,
  out_act_fn = 1,
  iter = 1000,
  warmup = 200,
  thin = 1,
  chains = 2,
  cores = 2,
  seed = 123,
  prior_weights = NULL,
  prior_sigma = NULL,
  ...
)
}
\arguments{
\item{formula}{A symbolic description of the model to be fitted. The formula should specify the response variable and predictors (e.g., \code{y ~ x1 + x2}).}

\item{data}{A data frame or list containing the variables in the model. Default is an empty list.}

\item{L}{An integer specifying the number of hidden layers in the neural network. Default is 1.}

\item{nodes}{An integer or vector specifying the number of nodes in each hidden layer. If a single value is provided, it is applied to all layers. Default is 16.}

\item{act_fn}{An integer or vector specifying the activation function(s) for the hidden layers. Options are:
\itemize{
\item \code{1} for tanh
\item \code{2} for sigmoid (default)
\item \code{3} for ReLU
\item \code{4} for softplus
}}

\item{out_act_fn}{An integer specifying the activation function for the output layer. Options are:
\itemize{
\item \code{1} for linear (default)
\item \code{2} for sigmoid
\item \code{3} for softmax
}}

\item{iter}{An integer specifying the total number of iterations for the Stan sampler. Default is \code{1e3}.}

\item{warmup}{An integer specifying the number of warmup iterations for the Stan sampler. Default is \code{2e2}.}

\item{thin}{An integer specifying the thinning interval for Stan samples. Default is 1.}

\item{chains}{An integer specifying the number of Markov chains. Default is 2.}

\item{cores}{An integer specifying the number of CPU cores to use for parallel sampling. Default is 2.}

\item{seed}{An integer specifying the random seed for reproducibility. Default is 123.}

\item{prior_weights}{A list specifying the prior distribution for the weights in the neural network.
The list must include two components:
\itemize{
\item \code{dist}: A character string specifying the distribution type. Supported values are
\code{"normal"}, \code{"uniform"}, and \code{"cauchy"}.
\item \code{params}: A named list specifying the parameters for the chosen distribution:
\itemize{
\item For \code{"normal"}: Provide \code{mean} (mean of the distribution) and \code{sd} (standard deviation).
\item For \code{"uniform"}: Provide \code{lower} (lower bound) and \code{upper} (upper bound).
\item For \code{"cauchy"}: Provide \code{location} (location parameter) and \code{scale} (scale parameter).
}
}
If \code{prior_weights} is \code{NULL}, the default prior is a \code{normal(0, 1)} distribution.
For example:
\itemize{
\item \code{list(dist = "normal", params = list(mean = 0, sd = 1))}
\item \code{list(dist = "uniform", params = list(lower = -1, upper = 1))}
\item \code{list(dist = "cauchy", params = list(location = 0, scale = 2.5))}
}}

\item{prior_sigma}{A list specifying the prior distribution for the \code{sigma} parameter in regression
models (\code{out_act_fn = 1}). This allows for setting priors on the standard deviation of the residuals.
The list must include two components:
\itemize{
\item \code{dist}: A character string specifying the distribution type. Supported values are
\code{"half-normal"} and \code{"inverse-gamma"}.
\item \code{params}: A named list specifying the parameters for the chosen distribution:
\itemize{
\item For \code{"half-normal"}: Provide \code{sd} (standard deviation of the half-normal distribution).
\item For \code{"inverse-gamma"}: Provide \code{shape} (shape parameter) and \code{scale} (scale parameter).
}
}
If \code{prior_sigma} is \code{NULL}, the default prior is a \code{half-normal(0, 1)} distribution.
For example:
\itemize{
\item \code{list(dist = "half_normal", params = list(mean = 0, sd = 1))}
\item \code{list(dist = "inv_gamma", params = list(alpha = 1, beta = 1))}
}}

\item{...}{Currently not in use.}
}
\value{
An object of class \code{"bnns"} containing the fitted model and associated information, including:
\itemize{
\item \code{fit}: The fitted Stan model object.
\item \code{data}: A list containing the processed training data.
\item \code{call}: The matched function call.
\item \code{formula}: The formula used for the model.
}
}
\description{
Fits a Bayesian Neural Network (BNN) model using a formula interface. The function parses the formula and data to create the input feature matrix and target vector, then fits the model using \code{\link{bnns.default}}.
}
\details{
The function uses the provided formula and data to generate the design matrix for the predictors and the response vector. It then calls helper function bnns_train to fit the Bayesian Neural Network model.
}
\examples{
# Example usage with formula interface:
data <- data.frame(x1 = runif(10), x2 = runif(10), y = rnorm(10))
model <- bnns(y ~ -1 + x1 + x2,
  data = data, L = 1, nodes = 2, act_fn = 3,
  iter = 1e2, warmup = 5e1, chains = 1
)

}
