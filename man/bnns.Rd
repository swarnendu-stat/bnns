% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bnns.R
\name{bnns}
\alias{bnns}
\title{Generic Function for Fitting Bayesian Neural Network Models}
\usage{
bnns(
  formula,
  data = list(),
  L = 1,
  nodes = 16,
  act_fn = 2,
  out_act_fn = 1,
  iter = 1000,
  warmup = 200,
  thin = 1,
  chains = 2,
  cores = 2,
  seed = 123,
  ...
)
}
\arguments{
\item{formula}{A symbolic description of the model to be fitted. The formula should specify the response variable and predictors (e.g., \code{y ~ x1 + x2}). \code{y} must be continuous for regression (\code{out_act_fn = 1}), numeric 0/1 for binary classification (\code{out_act_fn = 2}), and factor with at least 3 levels for multi-classification (\code{out_act_fn = 3}).}

\item{data}{A data frame or list containing the variables in the model. Default is an empty list.}

\item{L}{An integer specifying the number of hidden layers in the neural network. Default is 1.}

\item{nodes}{An integer or vector specifying the number of nodes in each hidden layer. If a single value is provided, it is applied to all layers. Default is 16.}

\item{act_fn}{An integer or vector specifying the activation function(s) for the hidden layers. Options are:
\itemize{
\item \code{1} for tanh
\item \code{2} for sigmoid (default)
\item \code{3} for ReLU
\item \code{4} for softplus
}}

\item{out_act_fn}{An integer specifying the activation function for the output layer. Options are:
\itemize{
\item \code{1} for linear (default)
\item \code{2} for sigmoid
\item \code{3} for softmax
}}

\item{iter}{An integer specifying the total number of iterations for the Stan sampler. Default is \code{1e3}.}

\item{warmup}{An integer specifying the number of warmup iterations for the Stan sampler. Default is \code{2e2}.}

\item{thin}{An integer specifying the thinning interval for Stan samples. Default is 1.}

\item{chains}{An integer specifying the number of Markov chains. Default is 2.}

\item{cores}{An integer specifying the number of CPU cores to use for parallel sampling. Default is 2.}

\item{seed}{An integer specifying the random seed for reproducibility. Default is 123.}

\item{...}{Currently not in use.}
}
\value{
The result of the method dispatched by the class of the input data. Typically, this would be an object of class \code{"bnns"} containing the fitted model and associated information.
}
\description{
This is a generic function for fitting Bayesian Neural Network (BNN) models. It dispatches to methods based on the class of the input data.
}
\details{
The function serves as a generic interface to different methods of fitting Bayesian Neural Networks. The specific method dispatched depends on the class of the input arguments, allowing for flexibility in the types of inputs supported.
}
\examples{
# Example usage with formula interface:
data <- data.frame(x1 = runif(10), x2 = runif(10), y = rnorm(10))
model <- bnns(y ~ -1 + x1 + x2, data = data, L = 1, nodes = 2, act_fn = 1,
iter = 1e2, warmup = 5e1, chains = 1)

# See the documentation for bnns.default for more details on the default implementation.

}
\references{
\enumerate{
\item Bishop, C.M., 1995. Neural networks for pattern recognition. Oxford university press.
\item Carpenter, B., Gelman, A., Hoffman, M.D., Lee, D., Goodrich, B., Betancourt, M., Brubaker, M.A., Guo, J., Li, P. and Riddell, A., 2017. Stan: A probabilistic programming language. Journal of statistical software, 76.
\item Neal, R.M., 2012. Bayesian learning for neural networks (Vol. 118). Springer Science & Business Media.
}
}
\seealso{
\code{\link{bnns.default}}
}
